<%- include('../partials/header', { title: 'Plugin Management', currentUrl: '/plugins' }) %>

<!-- Page Header -->
<div class="mb-8">
    <div class="flex flex-col sm:flex-row sm:items-center sm:justify-between">
        <div>
            <h1 class="text-3xl font-bold text-white mb-2">Plugin Management</h1>
            <p class="text-slate-400">Manage and configure system payment plugins</p>
        </div>
        <div class="mt-4 sm:mt-0 flex gap-3">
            <button class="inline-flex items-center px-4 py-2 bg-slate-700 hover:bg-slate-600 text-slate-300 rounded-lg transition-colors duration-200 border border-slate-600" onclick="refreshPlugins()">
                <i class="fas fa-sync-alt mr-2"></i>
                Refresh
            </button>
            <button class="inline-flex items-center px-4 py-2 bg-gradient-to-r from-blue-600 to-blue-700 hover:from-blue-700 hover:to-blue-800 text-white rounded-lg transition-all duration-200 transform hover:scale-105 shadow-lg" onclick="installNewPlugin()">
                <i class="fas fa-plus mr-2"></i>
                Install Plugin
            </button>
        </div>
    </div>
</div>

<!-- Success/Error Messages -->
<% if (successMessage) { %>
    <div class="mb-6 bg-green-500/10 border border-green-500/20 rounded-xl p-4">
        <div class="flex items-center">
            <i class="fas fa-check-circle text-green-400 mr-3"></i>
            <p class="text-green-300"><%= successMessage %></p>
        </div>
    </div>
<% } %>

<% if (errorMessage) { %>
    <div class="mb-6 bg-red-500/10 border border-red-500/20 rounded-xl p-4">
        <div class="flex items-center">
            <i class="fas fa-exclamation-circle text-red-400 mr-3"></i>
            <p class="text-red-300"><%= errorMessage %></p>
        </div>
    </div>
<% } %>

<!-- Statistics Cards -->
<div class="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-4 gap-6 mb-8">
    <!-- Total Plugins -->
    <div class="bg-slate-800 border border-slate-700 rounded-xl p-6 hover:shadow-lg hover:shadow-blue-500/10 transition-all duration-300 transform hover:-translate-y-1">
        <div class="flex items-center justify-between">
            <div class="flex-1">
                <p class="text-slate-400 text-sm font-medium mb-1">Total Plugins</p>
                <p class="text-3xl font-bold text-white"><%= stats.total_plugins %></p>
            </div>
            <div class="flex-shrink-0">
                <div class="w-14 h-14 bg-blue-500/10 rounded-xl flex items-center justify-center border border-blue-500/20">
                    <i class="fas fa-plug text-blue-400 text-2xl"></i>
                </div>
            </div>
        </div>
    </div>

    <!-- Active Plugins -->
    <div class="bg-slate-800 border border-slate-700 rounded-xl p-6 hover:shadow-lg hover:shadow-green-500/10 transition-all duration-300 transform hover:-translate-y-1">
        <div class="flex items-center justify-between">
            <div class="flex-1">
                <p class="text-slate-400 text-sm font-medium mb-1">Active Plugins</p>
                <p class="text-3xl font-bold text-white"><%= stats.active_plugins %></p>
            </div>
            <div class="flex-shrink-0">
                <div class="w-14 h-14 bg-green-500/10 rounded-xl flex items-center justify-center border border-green-500/20">
                    <i class="fas fa-check-circle text-green-400 text-2xl"></i>
                </div>
            </div>
        </div>
    </div>

    <!-- Error Plugins -->
    <div class="bg-slate-800 border border-slate-700 rounded-xl p-6 hover:shadow-lg hover:shadow-red-500/10 transition-all duration-300 transform hover:-translate-y-1">
        <div class="flex items-center justify-between">
            <div class="flex-1">
                <p class="text-slate-400 text-sm font-medium mb-1">Error Plugins</p>
                <p class="text-3xl font-bold text-white"><%= stats.error_plugins %></p>
            </div>
            <div class="flex-shrink-0">
                <div class="w-14 h-14 bg-red-500/10 rounded-xl flex items-center justify-center border border-red-500/20">
                    <i class="fas fa-exclamation-triangle text-red-400 text-2xl"></i>
                </div>
            </div>
        </div>
    </div>

    <!-- Built-in Plugins -->
    <div class="bg-slate-800 border border-slate-700 rounded-xl p-6 hover:shadow-lg hover:shadow-purple-500/10 transition-all duration-300 transform hover:-translate-y-1">
        <div class="flex items-center justify-between">
            <div class="flex-1">
                <p class="text-slate-400 text-sm font-medium mb-1">Built-in</p>
                <p class="text-3xl font-bold text-white" id="builtinCount">0</p>
            </div>
            <div class="flex-shrink-0">
                <div class="w-14 h-14 bg-purple-500/10 rounded-xl flex items-center justify-center border border-purple-500/20">
                    <i class="fas fa-cube text-purple-400 text-2xl"></i>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Search and Filters -->
<div class="bg-slate-800 border border-slate-700 rounded-xl p-4 sm:p-6 mb-6 shadow-lg">
    <div class="grid grid-cols-1 md:grid-cols-4 gap-4">
        <!-- Search Input -->
        <div class="md:col-span-2">
            <label class="block text-sm font-medium text-slate-300 mb-2">Search Plugins</label>
            <div class="relative">
                <input
                    type="text"
                    id="pluginSearch"
                    placeholder="Plugin name, author, or description..."
                    class="w-full h-10 pl-10 pr-4 text-sm bg-slate-900 border border-slate-600 rounded-lg text-white placeholder-slate-400 focus:border-blue-500 focus:ring-blue-500 focus:outline-none focus:ring-2"
                >
                <div class="absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none">
                    <i class="fas fa-search text-slate-400"></i>
                </div>
            </div>
        </div>

        <!-- Status Filter -->
        <div>
            <label class="block text-sm font-medium text-slate-300 mb-2">Status</label>
            <select id="statusFilter" class="w-full h-10 px-4 text-sm bg-slate-900 border border-slate-600 rounded-lg text-white focus:border-blue-500 focus:ring-blue-500 focus:outline-none focus:ring-2">
                <option value="all">All Status</option>
                <option value="active">Active</option>
                <option value="inactive">Inactive</option>
                <option value="error">Error</option>
                <option value="builtin">Built-in</option>
            </select>
        </div>

        <!-- Type Filter -->
        <div>
            <label class="block text-sm font-medium text-slate-300 mb-2">Type</label>
            <select id="typeFilter" class="w-full h-10 px-4 text-sm bg-slate-900 border border-slate-600 rounded-lg text-white focus:border-blue-500 focus:ring-blue-500 focus:outline-none focus:ring-2">
                <option value="all">All Types</option>
                <option value="builtin">Built-in</option>
                <option value="external">External</option>
            </select>
        </div>
    </div>
</div>

<!-- Plugin Grid -->
<div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6" id="pluginGrid">
    <% plugins.forEach(function(plugin) { %>
        <div class="plugin-card bg-slate-800 border border-slate-700 rounded-xl p-6 hover:shadow-lg hover:shadow-blue-500/10 transition-all duration-300 transform hover:-translate-y-1 <%= plugin.is_active ? 'border-l-4 border-l-green-500' : 'border-l-4 border-l-slate-500' %> <%= plugin.has_error ? 'border-l-4 border-l-red-500' : '' %> <%= plugin.is_builtin ? 'bg-slate-800/50 border-purple-500/30' : '' %>"
             data-name="<%= plugin.name.toLowerCase() %>"
             data-author="<%= plugin.author.toLowerCase() %>"
             data-description="<%= plugin.description.toLowerCase() %>"
             data-status="<%= plugin.is_active ? 'active' : 'inactive' %>"
             data-type="<%= plugin.is_builtin ? 'builtin' : 'external' %>"
             data-error="<%= plugin.has_error ? 'error' : 'no-error' %>">

            <!-- Built-in Badge -->
            <% if (plugin.is_builtin) { %>
                <div class="absolute top-4 right-4">
                    <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-purple-500/20 text-purple-300 border border-purple-500/30">
                        <i class="fas fa-cube mr-1"></i>
                        Built-in
                    </span>
                </div>
            <% } %>

            <!-- Plugin Header -->
            <div class="flex items-start justify-between mb-4">
                <div class="flex-1">
                    <div class="flex items-center mb-2">
                        <h3 class="text-xl font-semibold text-white mr-3"><%= plugin.name %></h3>
                        <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-blue-500/20 text-blue-300 border border-blue-500/30">
                            v<%= plugin.version %>
                        </span>
                    </div>
                    <p class="text-sm text-slate-400">by <%= plugin.author %></p>
                </div>
            </div>

            <!-- Description -->
            <p class="text-slate-300 text-sm mb-4 line-clamp-3"><%= plugin.description %></p>

            <!-- Error Message -->
            <% if (plugin.has_error && plugin.error_message) { %>
                <div class="bg-red-500/10 border border-red-500/20 rounded-lg p-3 mb-4">
                    <div class="flex items-start">
                        <i class="fas fa-exclamation-triangle text-red-400 mt-0.5 mr-2"></i>
                        <p class="text-red-300 text-sm"><%= plugin.error_message %></p>
                    </div>
                </div>
            <% } %>

            <!-- Status Indicators -->
            <div class="flex items-center gap-2 mb-4">
                <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium <%= plugin.is_active ? 'bg-green-500/20 text-green-300 border border-green-500/30' : 'bg-slate-700 text-slate-300 border border-slate-600' %>">
                    <i class="fas <%= plugin.is_active ? 'fa-check-circle' : 'fa-pause-circle' %> mr-1"></i>
                    <%= plugin.is_active ? 'Active' : 'Inactive' %>
                </span>

                <% if (plugin.has_error) { %>
                    <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-red-500/20 text-red-300 border border-red-500/30">
                        <i class="fas fa-exclamation-triangle mr-1"></i>
                        Error
                    </span>
                <% } %>
            </div>

            <!-- Action Buttons -->
            <div class="flex gap-2">
                <% if (plugin.is_active) { %>
                    <button class="flex-1 inline-flex items-center justify-center px-3 py-2 bg-yellow-600 hover:bg-yellow-700 text-white text-sm font-medium rounded-lg transition-colors duration-200" onclick="togglePlugin('<%= plugin.name %>', false)">
                        <i class="fas fa-pause mr-2"></i>
                        Deactivate
                    </button>
                <% } else { %>
                    <button class="flex-1 inline-flex items-center justify-center px-3 py-2 bg-green-600 hover:bg-green-700 text-white text-sm font-medium rounded-lg transition-colors duration-200" onclick="togglePlugin('<%= plugin.name %>', true)">
                        <i class="fas fa-play mr-2"></i>
                        Activate
                    </button>
                <% } %>

                <a href="/plugins/<%= plugin.name %>/settings" class="flex-1 inline-flex items-center justify-center px-3 py-2 bg-blue-600 hover:bg-blue-700 text-white text-sm font-medium rounded-lg transition-colors duration-200">
                    <i class="fas fa-cog mr-2"></i>
                    Settings
                </a>

                <button class="inline-flex items-center justify-center px-3 py-2 bg-slate-700 hover:bg-slate-600 text-white text-sm font-medium rounded-lg transition-colors duration-200" onclick="viewLogs('<%= plugin.name %>')">
                    <i class="fas fa-file-alt"></i>
                </button>
            </div>
        </div>
    <% }); %>
</div>

<!-- Empty State -->
<% if (plugins.length === 0) { %>
    <div class="bg-slate-800 border border-slate-700 rounded-xl p-12 text-center">
        <div class="flex flex-col items-center space-y-4">
            <div class="w-16 h-16 bg-slate-700 rounded-full flex items-center justify-center">
                <i class="fas fa-plug text-slate-400 text-2xl"></i>
            </div>
            <div>
                <h3 class="text-xl font-semibold text-white mb-2">No Plugins Found</h3>
                <p class="text-slate-400">No plugins are currently installed or available.</p>
            </div>
            <button class="inline-flex items-center px-4 py-2 bg-blue-600 hover:bg-blue-700 text-white rounded-lg transition-colors duration-200" onclick="installNewPlugin()">
                <i class="fas fa-plus mr-2"></i>
                Install Your First Plugin
            </button>
        </div>
    </div>
<% } %>

    <!-- Logs Modal -->
<div id="logsModal" class="fixed inset-0 bg-slate-900/80 backdrop-blur-sm z-50 hidden">
    <div class="flex items-center justify-center min-h-screen p-4">
        <div class="bg-slate-800 border border-slate-700 rounded-xl max-w-4xl w-full max-h-[90vh] overflow-hidden">
            <!-- Modal Header -->
            <div class="px-6 py-4 border-b border-slate-700 flex items-center justify-between">
                <h3 class="text-xl font-semibold text-white" id="modalPluginName">Plugin Logs</h3>
                <button onclick="closeLogsModal()" class="text-slate-400 hover:text-white transition-colors">
                    <i class="fas fa-times text-xl"></i>
                </button>
            </div>

            <!-- Modal Content -->
            <div class="p-6 overflow-y-auto max-h-[calc(90vh-120px)]">
                <div id="logsContent" class="space-y-3">
                    <!-- Logs will be loaded here -->
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Toast Notification Container -->
<div id="toastContainer" class="fixed top-4 right-4 z-50 space-y-2"></div>

<!-- Loading Overlay -->
<div id="loadingOverlay" class="fixed inset-0 bg-slate-900/80 backdrop-blur-sm flex items-center justify-center z-50 hidden">
    <div class="bg-slate-800 border border-slate-700 rounded-xl p-6 flex items-center space-x-4 shadow-2xl">
        <div class="animate-spin rounded-full h-10 w-10 border-4 border-slate-600 border-t-blue-500"></div>
        <div>
            <span class="text-slate-200 font-medium">Processing...</span>
            <p class="text-slate-400 text-sm mt-1">Mohon tunggu sebentar</p>
        </div>
    </div>
</div>

<%- include('../partials/footer') %>

<script>
        // Initialize page
        document.addEventListener('DOMContentLoaded', function() {
            countBuiltinPlugins();
            setupEventListeners();
        });

        // Count built-in plugins
        function countBuiltinPlugins() {
            const builtinCards = document.querySelectorAll('.plugin-card[data-type="builtin"]');
            const builtinCount = document.getElementById('builtinCount');
            if (builtinCount) {
                builtinCount.textContent = builtinCards.length;
            }
        }

        // Setup event listeners
        function setupEventListeners() {
            // Search functionality
            const searchInput = document.getElementById('pluginSearch');
            if (searchInput) {
                searchInput.addEventListener('input', performSearch);
            }

            // Filter functionality
            const statusFilter = document.getElementById('statusFilter');
            const typeFilter = document.getElementById('typeFilter');

            if (statusFilter) {
                statusFilter.addEventListener('change', performFilters);
            }
            if (typeFilter) {
                typeFilter.addEventListener('change', performFilters);
            }

            // Close modal on outside click
            document.addEventListener('click', function(event) {
                const modal = document.getElementById('logsModal');
                if (event.target === modal) {
                    closeLogsModal();
                }
            });
        }

        // Plugin management functions
        async function togglePlugin(pluginName, activate) {
            showLoading();
            try {
                const response = await fetch(`/plugins/api/plugins/${pluginName}/toggle`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({ active: activate })
                });

                const result = await response.json();

                if (result.success) {
                    showToast('success', result.message || `Plugin ${activate ? 'activated' : 'deactivated'} successfully`);
                    setTimeout(() => {
                        window.location.href = `/plugins?success=${encodeURIComponent(result.message)}`;
                    }, 1000);
                } else {
                    showToast('error', result.message || 'Failed to toggle plugin');
                }
            } catch (error) {
                console.error('Error toggling plugin:', error);
                showToast('error', 'Failed to toggle plugin');
            } finally {
                hideLoading();
            }
        }

        async function viewLogs(pluginName) {
            document.getElementById('modalPluginName').textContent = `${pluginName} Logs`;
            document.getElementById('logsModal').classList.remove('hidden');
            document.getElementById('logsContent').innerHTML = `
                <div class="flex items-center justify-center py-8">
                    <div class="animate-spin rounded-full h-8 w-8 border-4 border-slate-600 border-t-blue-500"></div>
                    <span class="ml-3 text-slate-400">Loading logs...</span>
                </div>
            `;

            try {
                const response = await fetch(`/plugins/api/plugins/${pluginName}/logs`);
                const result = await response.json();

                if (result.success && result.data && result.data.length > 0) {
                    let logsHtml = '';
                    result.data.forEach(log => {
                        const levelColors = {
                            error: 'text-red-400 bg-red-500/10 border-red-500/20',
                            warning: 'text-yellow-400 bg-yellow-500/10 border-yellow-500/20',
                            info: 'text-blue-400 bg-blue-500/10 border-blue-500/20',
                            debug: 'text-slate-400 bg-slate-500/10 border-slate-500/20'
                        };

                        const colorClass = levelColors[log.level] || levelColors.debug;
                        const iconClass = log.level === 'error' ? 'fa-exclamation-triangle' :
                                       log.level === 'warning' ? 'fa-exclamation-circle' :
                                       log.level === 'info' ? 'fa-info-circle' : 'fa-bug';

                        logsHtml += `
                            <div class="border rounded-lg p-4 ${colorClass}">
                                <div class="flex items-start justify-between mb-2">
                                    <div class="flex items-center">
                                        <i class="fas ${iconClass} mr-2"></i>
                                        <span class="font-semibold text-sm uppercase">${log.level}</span>
                                    </div>
                                    <span class="text-xs text-slate-400">${new Date(log.created_at).toLocaleString()}</span>
                                </div>
                                <p class="text-sm mb-2">${log.message}</p>
                                ${log.details ? `
                                    <details class="mt-2">
                                        <summary class="text-xs cursor-pointer text-slate-400 hover:text-slate-300">View Details</summary>
                                        <pre class="mt-2 p-2 bg-slate-900/50 rounded text-xs overflow-x-auto">${JSON.stringify(log.details, null, 2)}</pre>
                                    </details>
                                ` : ''}
                            </div>
                        `;
                    });
                    document.getElementById('logsContent').innerHTML = logsHtml || '<p class="text-slate-400 text-center py-4">No logs found</p>';
                } else {
                    document.getElementById('logsContent').innerHTML = `
                        <div class="text-center py-8">
                            <i class="fas fa-file-alt text-4xl text-slate-600 mb-4"></i>
                            <p class="text-slate-400">No logs found for this plugin</p>
                        </div>
                    `;
                }
            } catch (error) {
                console.error('Error loading logs:', error);
                document.getElementById('logsContent').innerHTML = `
                    <div class="text-center py-8">
                        <i class="fas fa-exclamation-triangle text-4xl text-red-400 mb-4"></i>
                        <p class="text-red-400">Error loading logs</p>
                    </div>
                `;
            }
        }

        function closeLogsModal() {
            document.getElementById('logsModal').classList.add('hidden');
        }

        // Search functionality
        function performSearch() {
            const searchTerm = document.getElementById('pluginSearch').value.toLowerCase();
            const pluginCards = document.querySelectorAll('.plugin-card');

            pluginCards.forEach(card => {
                const name = card.dataset.name;
                const author = card.dataset.author;
                const description = card.dataset.description;

                const matches = name.includes(searchTerm) ||
                               author.includes(searchTerm) ||
                               description.includes(searchTerm);

                card.style.display = matches ? 'block' : 'none';
            });
        }

        // Filter functionality
        function performFilters() {
            const statusFilter = document.getElementById('statusFilter').value;
            const typeFilter = document.getElementById('typeFilter').value;
            const pluginCards = document.querySelectorAll('.plugin-card');

            pluginCards.forEach(card => {
                const status = card.dataset.status;
                const type = card.dataset.type;
                const hasError = card.dataset.error === 'error';

                let show = true;

                // Status filter
                if (statusFilter !== 'all') {
                    if (statusFilter === 'error') {
                        show = show && hasError;
                    } else {
                        show = show && status === statusFilter;
                    }
                }

                // Type filter
                if (typeFilter !== 'all') {
                    show = show && type === typeFilter;
                }

                card.style.display = show ? 'block' : 'none';
            });
        }

        // Utility functions
        function refreshPlugins() {
            showLoading();
            setTimeout(() => {
                window.location.reload();
            }, 500);
        }

        function installNewPlugin() {
            showToast('info', 'Plugin installation feature coming soon!');
        }

        function showLoading() {
            document.getElementById('loadingOverlay').classList.remove('hidden');
        }

        function hideLoading() {
            document.getElementById('loadingOverlay').classList.add('hidden');
        }

        function showToast(type, message) {
            const toastContainer = document.getElementById('toastContainer');
            const toastId = 'toast-' + Date.now();

            const icons = {
                success: 'fa-check-circle',
                error: 'fa-exclamation-circle',
                warning: 'fa-exclamation-triangle',
                info: 'fa-info-circle'
            };

            const colors = {
                success: 'bg-green-500/10 border-green-500/20 text-green-300',
                error: 'bg-red-500/10 border-red-500/20 text-red-300',
                warning: 'bg-yellow-500/10 border-yellow-500/20 text-yellow-300',
                info: 'bg-blue-500/10 border-blue-500/20 text-blue-300'
            };

            const toast = document.createElement('div');
            toast.id = toastId;
            toast.className = `flex items-center p-4 rounded-lg border ${colors[type]} backdrop-blur-sm transform transition-all duration-300 translate-x-full`;
            toast.innerHTML = `
                <i class="fas ${icons[type]} mr-3"></i>
                <span class="flex-1">${message}</span>
                <button onclick="removeToast('${toastId}')" class="ml-3 hover:opacity-70">
                    <i class="fas fa-times"></i>
                </button>
            `;

            toastContainer.appendChild(toast);

            // Animate in
            setTimeout(() => {
                toast.classList.remove('translate-x-full');
            }, 100);

            // Auto remove after 5 seconds
            setTimeout(() => {
                removeToast(toastId);
            }, 5000);
        }

        function removeToast(toastId) {
            const toast = document.getElementById(toastId);
            if (toast) {
                toast.classList.add('translate-x-full');
                setTimeout(() => {
                    toast.remove();
                }, 300);
            }
        }
    </script>