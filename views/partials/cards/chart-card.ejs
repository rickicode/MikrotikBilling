<%-
  /**
   * Chart Card Component for Data Visualization
   * Variables:
   * - title: Chart title (string, required)
   * - subtitle: Chart subtitle (string, optional)
   * - chartId: Unique ID for canvas element (string, required)
   * - chartType: Chart type ('line', 'bar', 'doughnut', 'pie', 'radar', default: 'line')
   * - chartData: JavaScript variable name for chart data (string, optional)
   * - chartOptions: JavaScript variable name for chart options (string, optional)
   * - height: Chart height (string, default: '300px')
   * - showLegend: Show chart legend (boolean, default: false)
   * - showControls: Show period selector (boolean, default: false)
   * - controls: Control options array, format: [{label: string, value: string, active: boolean}]
   * - loading: Show loading state (boolean, default: false)
   * - class: Additional CSS classes (string, optional)
   * - id: Card ID (string, optional)
   */

  // Set defaults
  const chartType = locals.chartType || 'line';
  const height = locals.height || '300px';
  const showLegend = locals.showLegend !== false;
  const showControls = locals.showControls === true;
  const loading = locals.loading || false;
  const chartId = locals.chartId || 'chart-' + Math.random().toString(36).substr(2, 9);
  const cardId = locals.id || 'chart-card-' + Math.random().toString(36).substr(2, 9);
%>

<div id="<%= cardId %>" class="bg-dark-800 border border-dark-700 rounded-lg p-6 <%= locals.class || '' %>">
  <!-- Header -->
  <div class="flex items-center justify-between mb-6">
    <div>
      <% if (locals.title) { %>
        <h3 class="text-lg font-semibold text-white mb-1">
          <%= locals.title %>
        </h3>
      <% } %>
      <% if (locals.subtitle) { %>
        <p class="text-sm text-dark-400">
          <%= locals.subtitle %>
        </p>
      <% } %>
    </div>

    <% if (showControls && locals.controls) { %>
      <select class="chart-control bg-dark-700 border border-dark-600 text-dark-200 text-sm rounded-lg px-3 py-1 focus:ring-2 focus:ring-blue-500 focus:border-transparent" data-chart-id="<%= chartId %>">
        <% locals.controls.forEach(control => { %>
          <option value="<%= control.value %>" <%= control.active ? 'selected' : '' %>>
            <%= control.label %>
          </option>
        <% }); %>
      </select>
    <% } %>
  </div>

  <!-- Chart Container -->
  <div class="chart-container" style="height: <%= height %>;">
    <% if (loading) { %>
      <!-- Loading State -->
      <div class="flex items-center justify-center h-full">
        <div class="text-center">
          <div class="animate-spin rounded-full h-12 w-12 border-b-2 border-blue-400 mx-auto mb-4"></div>
          <p class="text-dark-400">Memuat data...</p>
        </div>
      </div>
    <% } else { %>
      <!-- Chart Canvas -->
      <canvas id="<%= chartId %>"></canvas>
    <% } %>
  </div>

  <% if (showLegend && !loading) { %>
    <!-- Legend Container -->
    <div class="chart-legend mt-4 flex flex-wrap gap-4 text-sm" id="<%= chartId %>-legend">
      <!-- Legend items will be dynamically populated -->
    </div>
  <% } %>

  <% if (!loading) { %>
    <!-- Chart Initialization Script -->
    <script>
      (function() {
        // Set dark theme defaults for Chart.js
        Chart.defaults.color = '#94a3b8';
        Chart.defaults.borderColor = '#334155';

        // Get chart data and options
        const chartData = <%= locals.chartData || 'null' %>;
        const chartOptions = <%= locals.chartOptions || 'null' %>;

        // Default chart configuration
        const defaultConfig = {
          type: '<%= chartType %>',
          data: chartData || {
            labels: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun'],
            datasets: [{
              label: 'Data',
              data: [12, 19, 3, 5, 2, 3],
              borderColor: '#3b82f6',
              backgroundColor: 'rgba(59, 130, 246, 0.1)',
              borderWidth: 2,
              fill: true,
              tension: 0.4
            }]
          },
          options: chartOptions || {
            responsive: true,
            maintainAspectRatio: false,
            plugins: {
              legend: {
                display: false
              },
              tooltip: {
                backgroundColor: '#1e293b',
                titleColor: '#f1f5f9',
                bodyColor: '#cbd5e1',
                borderColor: '#334155',
                borderWidth: 1,
                padding: 12,
                displayColors: true
              }
            },
            scales: {
              x: {
                grid: {
                  color: '#334155',
                  drawBorder: false
                },
                ticks: {
                  color: '#94a3b8'
                }
              },
              y: {
                grid: {
                  color: '#334155',
                  drawBorder: false
                },
                ticks: {
                  color: '#94a3b8'
                }
              }
            }
          }
        };

        // Create chart
        const ctx = document.getElementById('<%= chartId %>');
        if (ctx) {
          const chart = new Chart(ctx, defaultConfig);

          // Handle period selector
          const control = document.querySelector('.chart-control[data-chart-id="<%= chartId %>"]');
          if (control) {
            control.addEventListener('change', function() {
              // Trigger chart update event
              const event = new CustomEvent('chartPeriodChange', {
                detail: {
                  chartId: '<%= chartId %>',
                  period: this.value,
                  chart: chart
                }
              });
              document.dispatchEvent(event);
            });
          }

          // Generate custom legend if needed
          <% if (showLegend) { %>
            const legendContainer = document.getElementById('<%= chartId %>-legend');
            if (legendContainer && chart.data.datasets.length > 0) {
              legendContainer.innerHTML = chart.data.datasets.map((dataset, index) => `
                <div class="flex items-center">
                  <div class="w-3 h-3 rounded-full mr-2" style="background-color: ${dataset.borderColor}"></div>
                  <span class="text-dark-300">${dataset.label}</span>
                </div>
              `).join('');
            }
          <% } %>

          // Make chart globally accessible
          window['chart_<%= chartId %>'] = chart;
        }
      })();
    </script>
  <% } %>
</div>