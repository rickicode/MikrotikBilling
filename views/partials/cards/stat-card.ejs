<%-
  /**
   * Stat Card Component for Dashboard Statistics
   * Variables:
   * - title: Stat title (string, required)
   * - value: Stat value (string/number, required)
   * - icon: FontAwesome icon class (string, required)
   * - trend: Trend indicator ('up', 'down', 'neutral', optional)
   * - trendValue: Trend percentage (string, optional)
   * - trendText: Trend description (string, optional)
   * - color: Color theme ('blue', 'green', 'yellow', 'red', 'purple', 'orange', default: 'blue')
   * - size: Card size ('sm', 'md', 'lg', default: 'md')
   * - loading: Show loading state (boolean, default: false)
   * - animated: Animate counter on load (boolean, default: true)
   * - class: Additional CSS classes (string, optional)
   * - id: Card ID (string, optional)
   */

  // Set defaults
  const color = locals.color || 'blue';
  const size = locals.size || 'md';
  const loading = locals.loading || false;
  const animated = locals.animated !== false;
  const cardId = locals.id || 'stat-card-' + Math.random().toString(36).substr(2, 9);

  // Color configurations
  const colorConfig = {
    blue: {
      bg: 'bg-blue-500 bg-opacity-10',
      text: 'text-blue-400',
      border: 'border-blue-400'
    },
    green: {
      bg: 'bg-green-500 bg-opacity-10',
      text: 'text-green-400',
      border: 'border-green-400'
    },
    yellow: {
      bg: 'bg-yellow-500 bg-opacity-10',
      text: 'text-yellow-400',
      border: 'border-yellow-400'
    },
    red: {
      bg: 'bg-red-500 bg-opacity-10',
      text: 'text-red-400',
      border: 'border-red-400'
    },
    purple: {
      bg: 'bg-purple-500 bg-opacity-10',
      text: 'text-purple-400',
      border: 'border-purple-400'
    },
    orange: {
      bg: 'bg-orange-500 bg-opacity-10',
      text: 'text-orange-400',
      border: 'border-orange-400'
    }
  };

  const currentColor = colorConfig[color];

  // Size configurations
  const sizeConfig = {
    sm: {
      iconSize: 'w-10 h-10',
      iconText: 'text-lg',
      valueSize: 'text-xl',
      titleSize: 'text-sm'
    },
    md: {
      iconSize: 'w-12 h-12',
      iconText: 'text-xl',
      valueSize: 'text-2xl',
      titleSize: 'text-sm'
    },
    lg: {
      iconSize: 'w-16 h-16',
      iconText: 'text-2xl',
      valueSize: 'text-3xl',
      titleSize: 'text-base'
    }
  };

  const currentSize = sizeConfig[size];

  // Trend configurations
  const trendConfig = {
    up: {
      icon: 'fas fa-arrow-up',
      color: 'text-green-400'
    },
    down: {
      icon: 'fas fa-arrow-down',
      color: 'text-red-400'
    },
    neutral: {
      icon: 'fas fa-minus',
      color: 'text-gray-400'
    }
  };

  const currentTrend = locals.trend ? trendConfig[locals.trend] : null;
%>

<div id="<%= cardId %>" class="bg-dark-800 border border-dark-700 <%= currentColor.border %> border-l-4 rounded-lg p-6 hover:shadow-lg transition-shadow duration-300 <%= locals.class || '' %>">
  <div class="flex items-center justify-between">
    <div class="flex-1">
      <p class="<%= currentSize.titleSize %> text-dark-400 font-medium mb-1">
        <%= locals.title %>
      </p>
      <p class="<%= currentSize.valueSize %> font-bold text-white <%= animated ? 'counter' : '' %>" <%= animated ? 'data-target="' + (typeof locals.value === 'number' ? locals.value : 0) + '"' : '' %>>
        <% if (loading) { %>
          <span class="inline-block w-20 h-8 bg-dark-700 rounded animate-pulse"></span>
        <% } else { %>
          <%= locals.value %>
        <% } %>
      </p>

      <% if (locals.trend && locals.trendValue) { %>
        <div class="mt-4 flex items-center text-sm">
          <% if (currentTrend) { %>
            <span class="<%= currentTrend.color %> flex items-center">
              <i class="<%= currentTrend.icon %> mr-1"></i>
              <span><%= locals.trendValue %></span>
            </span>
          <% } %>
          <% if (locals.trendText) { %>
            <span class="text-dark-500 ml-2"><%= locals.trendText %></span>
          <% } %>
        </div>
      <% } %>
    </div>

    <% if (!loading) { %>
      <div class="flex-shrink-0">
        <div class="<%= currentSize.iconSize %> <%= currentColor.bg %> rounded-lg flex items-center justify-center">
          <i class="<%= locals.icon %> <%= currentColor.text %> <%= currentSize.iconText %>"></i>
        </div>
      </div>
    <% } else { %>
      <div class="flex-shrink-0">
        <div class="<%= currentSize.iconSize %> bg-dark-700 rounded-lg animate-pulse"></div>
      </div>
    <% } %>
  </div>
</div>

<% if (animated && !loading && typeof locals.value === 'number') { %>
  <script>
    (function() {
      const element = document.querySelector('#<%= cardId %> .counter');
      if (!element) return;

      const target = parseInt(element.dataset.target);
      const duration = 1000; // 1 second
      const step = target / (duration / 16); // 60fps
      let current = 0;

      const timer = setInterval(() => {
        current += step;
        if (current >= target) {
          current = target;
          clearInterval(timer);
        }
        element.textContent = Math.floor(current).toLocaleString('id-ID');
      }, 16);
    })();
  </script>
<% } %>